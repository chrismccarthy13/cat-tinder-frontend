{"ast":null,"code":"const BASE = 'http://localhost:3000';\n\nlet getCats = function () {\n  // the function name getCats is intended to remind you of the restful rails route --> GET '/cats'.\n  return fetch(BASE + '/cats') // this would be equivalent to going to localhost:3000/cats in your browser. Do that - - what do you see?\n  .then(resp => {\n    // resp will be whatever you saw on the page localhost:3000/cats, it is the result of our fetch call\n    let json = resp.json(); // we want to make sure what we have is just the json part of the response\n\n    return json;\n  });\n};\n\nlet deleteCat = cat => {\n  return fetch(BASE + \"/cats/\".concat(cat), {\n    method: 'delete'\n  });\n};\n\nlet showCat = cat => {\n  return fetch(BASE + \"/cats/\".concat(cat)) // return fetch(BASE + `/cats/${cat.id}`)\n  .then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nlet createCat = cat => {\n  return fetch(BASE + '/cats', {\n    body: JSON.stringify(cat),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: \"POST\"\n  }).then(resp => {\n    if (resp.ok) {\n      let json = resp.json();\n      return json;\n    } // else {\n    //     var error = new Error(resp.statusText)\n    //     error.resp = resp\n    //     return error\n    // }\n\n  });\n};\n\nlet updateCat = cat => {\n  console.log('cat from the update cat method in index js');\n  console.log(cat);\n  return fetch(BASE + \"/cats/\".concat(cat), {\n    body: JSON.stringify(cat),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: \"PUT\",\n    mode: 'CORS'\n  }).then(resp => {\n    if (resp.ok) {\n      let json = resp.json();\n      return json;\n    }\n  });\n};\n\nexport { getCats, createCat, showCat, deleteCat, updateCat };","map":{"version":3,"sources":["/Users/learn/Desktop/cat-tiner-front-end-design/cat-tinder-frontend/src/api/index.js"],"names":["BASE","getCats","fetch","then","resp","json","deleteCat","cat","method","showCat","res","data","createCat","body","JSON","stringify","headers","ok","updateCat","console","log","mode"],"mappings":"AAAA,MAAMA,IAAI,GAAG,uBAAb;;AAEA,IAAIC,OAAO,GAAG,YAAW;AACzB;AACC,SAAOC,KAAK,CAACF,IAAI,GAAG,OAAR,CAAL,CAAsB;AAAtB,GACLG,IADK,CACCC,IAAD,IAAU;AACN;AACT,QAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX,CAFe,CAEQ;;AAEvB,WAAOA,IAAP;AACA,GANK,CAAP;AAOA,CATD;;AAUA,IAAIC,SAAS,GAAIC,GAAD,IAAS;AAErB,SAAOL,KAAK,CAACF,IAAI,mBAAYO,GAAZ,CAAL,EAAuB;AAC/BC,IAAAA,MAAM,EAAE;AADuB,GAAvB,CAAZ;AAGH,CALD;;AAOA,IAAIC,OAAO,GAAIF,GAAD,IAAS;AACnB,SAAOL,KAAK,CAACF,IAAI,mBAAYO,GAAZ,CAAL,CAAL,CACP;AADO,GAEFJ,IAFE,CAEG,UAAUO,GAAV,EAAe;AACjB,WAAOA,GAAG,CAACL,IAAJ,EAAP;AACH,GAJE,EAKFF,IALE,CAKG,UAAUQ,IAAV,EAAe;AACjB,WAAOA,IAAP;AACH,GAPE,CAAP;AAQC,CATL;;AAUA,IAAIC,SAAS,GAAIL,GAAD,IAAS;AACrB,SAAOL,KAAK,CAACF,IAAI,GAAG,OAAR,EAAiB;AACzBa,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf,CADmB;AAEzBS,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFgB;AAKzBR,IAAAA,MAAM,EAAE;AALiB,GAAjB,CAAL,CAOFL,IAPE,CAOIC,IAAD,IAAU;AACZ,QAAIA,IAAI,CAACa,EAAT,EAAa;AACT,UAAIZ,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACA,aAAOA,IAAP;AACH,KAJW,CAKZ;AACA;AACA;AACA;AACA;;AAEH,GAlBE,CAAP;AAmBH,CApBD;;AAqBA,IAAIa,SAAS,GAAIX,GAAD,IAAS;AACxBY,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACA,SAAOL,KAAK,CAACF,IAAI,mBAAYO,GAAZ,CAAL,EAAwB;AACnCM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAD6B;AAEnCS,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAF0B;AAKnCR,IAAAA,MAAM,EAAE,KAL2B;AAMnCa,IAAAA,IAAI,EAAE;AAN6B,GAAxB,CAAL,CAQLlB,IARK,CAQCC,IAAD,IAAU;AACf,QAAIA,IAAI,CAACa,EAAT,EAAa;AACZ,UAAIZ,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACA,aAAOA,IAAP;AACA;AAED,GAdK,CAAP;AAeA,CAlBD;;AAoBA,SACCJ,OADD,EAEIW,SAFJ,EAGIH,OAHJ,EAIIH,SAJJ,EAKIY,SALJ","sourcesContent":["const BASE = 'http://localhost:3000'\n\nlet getCats = function() {\n// the function name getCats is intended to remind you of the restful rails route --> GET '/cats'.\n\treturn fetch(BASE + '/cats') // this would be equivalent to going to localhost:3000/cats in your browser. Do that - - what do you see?\n\t\t.then((resp) => {\n           \t// resp will be whatever you saw on the page localhost:3000/cats, it is the result of our fetch call\n\t\t\tlet json = resp.json() // we want to make sure what we have is just the json part of the response\n\n\t\t\treturn json\n\t\t})\n}\nlet deleteCat = (cat) => {\n\n    return fetch(BASE + `/cats/${cat}`,{\n        method: 'delete'\n    })\n}\n\nlet showCat = (cat) => {\n    return fetch(BASE + `/cats/${cat}`)\n    // return fetch(BASE + `/cats/${cat.id}`)\n        .then(function (res) {\n            return res.json()\n        })\n        .then(function (data){\n            return data\n        })\n    }\nlet createCat = (cat) => {\n    return fetch(BASE + '/cats', {\n        body: JSON.stringify(cat),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"POST\"\n    })\n        .then((resp) => {\n            if (resp.ok) {\n                let json = resp.json()\n                return json\n            }\n            // else {\n            //     var error = new Error(resp.statusText)\n            //     error.resp = resp\n            //     return error\n            // }\n\n        })\n}\nlet updateCat = (cat) => {\n\tconsole.log('cat from the update cat method in index js');\n\tconsole.log(cat);\n\treturn fetch(BASE + `/cats/${cat}`, {\n\t\tbody: JSON.stringify(cat),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tmethod: \"PUT\",\n\t\tmode: 'CORS'\n\t})\n\t\t.then((resp) => {\n\t\t\tif (resp.ok) {\n\t\t\t\tlet json = resp.json()\n\t\t\t\treturn json\n\t\t\t}\n\n\t\t})\n}\n\nexport  {\n\tgetCats,\n    createCat,\n    showCat,\n    deleteCat,\n    updateCat\n}\n"]},"metadata":{},"sourceType":"module"}